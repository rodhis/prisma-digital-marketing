// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Group {
  id          Int    @id @default(autoincrement())
  name        String @db.VarChar(255)
  description String @db.VarChar(255)
  leads       Lead[] @relation("GroupLeads")
}

model Lead {
  id        Int            @id @default(autoincrement())
  name      String         @db.VarChar(255)
  email     String         @unique @db.VarChar(255)
  phone     String?        @db.VarChar(255)
  status    LeadStatus     @default(NEW)
  groups    Group[]        @relation("GroupLeads")
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  campaigns LeadCampaign[]
}

model Campaign {
  id          Int            @id @default(autoincrement())
  name        String         @db.VarChar(255)
  description String         @db.VarChar(255)
  startDate   DateTime
  endDate     DateTime?
  leads       LeadCampaign[]
}

model LeadCampaign {
  leadId     Int
  campaignId Int
  status     LeadCampaignStatus @default(NEW)
  lead       Lead               @relation(fields: [leadId], references: [id])
  campaign   Campaign           @relation(fields: [campaignId], references: [id])

  @@id([leadId, campaignId])
}

enum LeadStatus {
  NEW
  CONTACTED
  QUALIFIED
  CONVERTED
  UNRESPONSIVE
  DISQUALIFIED
  ARCHIVED
}

enum LeadCampaignStatus {
  NEW
  ENGAGED
  FOLLOWUP_SCHEDULED
  CONTACTED
  CONVERTED
  UNRESPONSIVE
  DISQUALIFIED
  RE_ENGAGED
  OPTED_OUT
}
